{
    "pipes": [],
    "interfaces": [
        {
            "name": "DropDown",
            "id": "interface-DropDown-cfff5dab587dfb79d187a652d92634b5c7f6db58a6ee576e157b2b29057daffea2fba0eabf9ee9fcbc4ae5c9bb9e18d99f361461521f57c3b0d91b21d2fb29ff",
            "file": "src/app/common-ui/controls/drop-down/drop-down.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\n\r\nexport interface DropDown {\r\n  name: string;\r\n  value: any;\r\n}\r\n@Component({\r\n  selector: 'app-drop-down',\r\n  templateUrl: './drop-down.component.html',\r\n  styleUrl: './drop-down.component.css',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class DropDownComponent {\r\n  @Input() label: string = 'Gender';\r\n  @Input() placeHolder: string = 'Select Gender';\r\n  @Input() isRequired: boolean = false;\r\n  @Output() selectedChange = new EventEmitter<any>();\r\n  @Input() options: DropDown[] = [];\r\n\r\n  selectedValue: any;\r\n  selectOption(option: DropDown) {\r\n    this.selectedValue = option.name;\r\n    this.selectedChange.emit(option.value);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "WeatherForecast",
            "id": "interface-WeatherForecast-9533aa51ac3ced825361cafe7c3c82f8df3b000f01d515a5afcfefe505d951307bc637ab19d6e12244a182dcc937dfe07a6725631d2fd4bac5f421fc220ac063",
            "file": "src/app/app.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public forecasts: WeatherForecast[] = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.getForecasts();\r\n  }\r\n\r\n  getForecasts() {\r\n    this.http.get<WeatherForecast[]>('/weatherforecast').subscribe(\r\n      (result) => {\r\n        this.forecasts = result;\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  title = 'orms.client';\r\n}\r\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "temperatureC",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "temperatureF",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9533aa51ac3ced825361cafe7c3c82f8df3b000f01d515a5afcfefe505d951307bc637ab19d6e12244a182dcc937dfe07a6725631d2fd4bac5f421fc220ac063",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "forecasts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherForecast[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'orms.client'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "getForecasts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public forecasts: WeatherForecast[] = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.getForecasts();\r\n  }\r\n\r\n  getForecasts() {\r\n    this.http.get<WeatherForecast[]>('/weatherforecast').subscribe(\r\n      (result) => {\r\n        this.forecasts = result;\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  title = 'orms.client';\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "ï»¿<app-basic-info></app-basic-info>"
        },
        {
            "name": "BasicInfoComponent",
            "id": "component-BasicInfoComponent-54ea332e9fd2478b7ea62919f3cc049f28b7d463773fd32d513ec08ef0a01a361956305ef3b78481897e178890a1e646eb3cfb0222121f3d74a5022e3f3037c3",
            "file": "src/app/modules/add-employee/basic-info/basic-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-basic-info",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./basic-info.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CalendarComponent",
                    "type": "component"
                },
                {
                    "name": "DropDownComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CalendarComponent } from \"../../../common-ui/controls/calendar/calendar.component\";\r\nimport { DropDownComponent } from \"../../../common-ui/controls/drop-down/drop-down.component\";\r\n\r\n@Component({\r\n  selector: 'app-basic-info',\r\n  templateUrl: './basic-info.component.html',\r\n  styleUrl: './basic-info.component.css',\r\n  standalone: true,\r\n  imports: [CalendarComponent, DropDownComponent]\r\n})\r\nexport class BasicInfoComponent {\r\n\r\n}\r\n",
            "styleUrl": "./basic-info.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"grid grid-cols-12\">\r\n    <div class=\"col-span-3\">\r\n        <app-calendar [label]=\"'DOB'\" [isRequired]=\"true\"></app-calendar>\r\n    </div>\r\n    <div class=\"col-span-3\">\r\n        <app-drop-down></app-drop-down>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-6aaebf480b56e98a3b4188a4d9fa16d0af74fd0c019d6fc0ce017ebbfa78e10209deada38386d67d961fe7c45862df44e20dd7960e373c6ad578ca8c21d83631",
            "file": "src/app/common-ui/controls/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "defaultValue": "'white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "'blue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderRadius",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'red'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hoverBGColor",
                    "defaultValue": "'red'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hoverColor",
                    "defaultValue": "'black'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBorder",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isHovered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrl: './button.component.css',\r\n  standalone: true,\r\n  imports: [CommonModule]\r\n})\r\nexport class ButtonComponent {\r\n  @Input() text: string = 'text';\r\n  @Input() bgColor: string = 'white';\r\n  @Input() color: string = 'red';\r\n  @Input() hoverBGColor: string = 'red';\r\n  @Input() hoverColor: string = 'black';\r\n  @Input() borderRadius: number = 5;\r\n  @Input() borderColor: string = 'blue';\r\n  @Input() showBorder: boolean = true;\r\n\r\n  isHovered: boolean = false;\r\n}\r\n",
            "styleUrl": "./button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<button class=\"px-4 py-2 pb-[11.5px]\" [class.border]=\"showBorder\" [ngStyle]=\"{\r\n    backgroundColor: isHovered ? hoverBGColor : bgColor,\r\n    color: isHovered ? hoverColor : color,\r\n    borderRadius: borderRadius+'%',\r\n    borderColor: borderColor\r\n  }\" (mouseenter)=\"isHovered = true\" (mouseleave)=\"isHovered = false\">\r\n  {{ text }}\r\n</button>"
        },
        {
            "name": "CalendarComponent",
            "id": "component-CalendarComponent-819fc80658fe162abc18981a79b755039fd2c6c05acb83c1a159de45bf7d6810a3411be3d72543b163a0e00551071b8a2ceec7a9b2afd95922b05e8d68688e37",
            "file": "src/app/common-ui/controls/calendar/calendar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-calendar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./calendar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isRequired",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Calendar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openDatePicker",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './calendar.component.html',\r\n  styleUrl: './calendar.component.css'\r\n})\r\nexport class CalendarComponent {\r\n  @Input() label?: string = 'Calendar';\r\n  @Input() isRequired?: boolean = true;\r\n  openDatePicker(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    input.showPicker();\r\n  }\r\n}\r\n",
            "styleUrl": "./calendar.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<label class=\"dob-label\">\r\n    {{ label}} \r\n    <span *ngIf=\"isRequired\" class=\"required-star\">*</span>\r\n</label><br>\r\n<input type=\"date\" class=\"dob-input\" (click)=\"openDatePicker($event)\" placeholder=\"dd-mm-yyyy\" required/>"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-26e5b39d33c977d189fde0712fc00811a476ec030f347ee1cb98e0e62bfd94b6576fab0f137eedd22e85d98c70219e79eb3a93ed160e9151ac5a7ad6cac30c1c",
            "file": "src/app/common-ui/controls/chip/chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./chip.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeBGColor",
                    "defaultValue": "'#7c3aedff'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "activeColor",
                    "defaultValue": "'white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bgColor",
                    "defaultValue": "'white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderRadius",
                    "defaultValue": "'9999px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'gray'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isHovered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chip',\r\n  standalone: true,\r\n  templateUrl: './chip.component.html',\r\n  styleUrl: './chip.component.css',\r\n})\r\nexport class ChipComponent {\r\n  @Input() text: string = 'text';\r\n  @Input() bgColor: string = 'white';\r\n  @Input() color: string = 'gray';\r\n  @Input() activeBGColor: string = '#7c3aedff';\r\n  @Input() activeColor: string = 'white';\r\n  @Input() borderRadius: string = '9999px';\r\n\r\n  isHovered: boolean = false;\r\n}\r\n",
            "styleUrl": "./chip.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\r\n  class=\"inline-flex items-center px-3 border border-gray-200 shadow-sm cursor-pointer transition-all duration-300 ease-in-out select-none\"\r\n  [style.backgroundColor]=\"isHovered ? activeBGColor : bgColor\" [style.color]=\"isHovered ? activeColor : color\"\r\n  [style.borderRadius]=\"borderRadius\" (mouseenter)=\"isHovered = true\" (mouseleave)=\"isHovered = false\">\r\n  {{ text }}\r\n</div>"
        },
        {
            "name": "CountWidgetComponent",
            "id": "component-CountWidgetComponent-1e60c6fdd7e797e0f2012e02352b3ce0b984564e6c7f3ffe90c546a8ac0ece71a77c7ac68ee0e108d9b998950f39f6a04bed15a9bb6e99b0ab81f677908a0ccd",
            "file": "src/app/common-ui/feature-components/count-widget/count-widget.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-count-widget",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./count-widget.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "\"white\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "borderColor",
                    "defaultValue": "\"gray\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "\"Total\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelColor",
                    "defaultValue": "\"gray\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBorder",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "valueColor",
                    "defaultValue": "\"skyblue\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-count-widget',\r\n  templateUrl: './count-widget.component.html',\r\n  styleUrl: './count-widget.component.css',\r\n  standalone:true\r\n})\r\nexport class CountWidgetComponent {\r\n  @Input() label: string = \"Total\"\r\n  @Input() labelColor: string = \"gray\"\r\n  @Input() value: number = 20\r\n  @Input() valueColor: string = \"skyblue\"\r\n  @Input() borderColor: string = \"gray\"\r\n  @Input() backgroundColor: string = \"white\"\r\n  @Input() showBorder: boolean = true;\r\n}\r\n",
            "styleUrl": "./count-widget.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"w-full h-full border-2 border-gray-300 rounded-lg p-5 flex flex-col justify-center items-center\" \r\n     [ngStyle]=\"{'border-color': showBorder ? borderColor : 'transparent', 'background-color': backgroundColor }\">\r\n  <div class=\"text-center py-1\" [style.color]=\"labelColor\">{{ label }}</div>\r\n  <div class=\"text-center py-1 text-sm\" [style.color]=\"valueColor\">{{ value }}</div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "DocumentsUploadComponent",
            "id": "component-DocumentsUploadComponent-481733a5cad59b5187c52dd794e332d1fda756582edc6d1e87900f9c5813f8d4d9ebb7ee6ecdba8925aff841ece3cb3bb7ec1c25216ee850e0f5f4f71d3adba4",
            "file": "src/app/modules/add-employee/documents-upload/documents-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-documents-upload",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./documents-upload.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FileUploadComponent",
                    "type": "component"
                },
                {
                    "name": "TextAreaComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FileUploadComponent } from '../../../common-ui/controls/file-upload/file-upload.component';\r\nimport { TextAreaComponent } from '../../../common-ui/controls/text-area/text-area.component';\r\n\r\n@Component({\r\n  selector: 'app-documents-upload',\r\n  templateUrl: './documents-upload.component.html',\r\n  styleUrl: './documents-upload.component.css',\r\n  standalone: true,\r\n  imports:[FileUploadComponent, TextAreaComponent]\r\n})\r\nexport class DocumentsUploadComponent {\r\n\r\n}\r\n",
            "styleUrl": "./documents-upload.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"blank-space\">\r\n    <div class=\"inside\">\r\n        <div class=\"icon\" aria-hidden=\"true\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                class=\"lucide lucide-upload h-4 w-4\" aria-hidden=\"true\">\r\n                <path d=\"M12 3v12\"></path>\r\n                <path d=\"m17 8-5-5-5 5\"></path>\r\n                <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n            </svg>\r\n        </div>\r\n        <p>Documents Upload</p>\r\n    </div>\r\n    <div class=\"grid-container\">\r\n        <app-file-upload [label]=\"'Employee Photo'\" [buttonLabel]=\"'Upload File'\"></app-file-upload>\r\n        <div></div>\r\n        <app-text-area [label]=\"'Employee PAN Number'\" [Placeholder]=\"'Enter your PAN Number'\"></app-text-area>\r\n        <app-file-upload [label]=\"'Employee PAN'\" [buttonLabel]=\"'Choose File'\"></app-file-upload>\r\n        <app-text-area [label]=\"'Employee Aadhar Number'\" [Placeholder]=\"'Enter your Aadhar Number'\"></app-text-area>\r\n        <app-file-upload [label]=\"'Employee Aadhar'\" [buttonLabel]=\"'Choose File'\"></app-file-upload>\r\n        <app-text-area [label]=\"'Employee Passport'\" [Placeholder]=\"'Enter your Passport Number'\"></app-text-area>\r\n        <app-file-upload [label]=\"'Employee Passport'\" [buttonLabel]=\"'Choose File'\"></app-file-upload>\r\n        <app-file-upload [label]=\"'Last 6months Bank Statements '\" [buttonLabel]=\"'Choose File'\"></app-file-upload>\r\n        <app-file-upload [label]=\"'Last 3months Payslips'\" [buttonLabel]=\"'Choose File'\"></app-file-upload>\r\n        <app-file-upload [label]=\"'Experience Letter'\" [buttonLabel]=\"'Choose File'\"></app-file-upload>\r\n        <app-file-upload [label]=\"'Relieving Letter'\" [buttonLabel]=\"'Choose File'\"></app-file-upload>\r\n        <app-file-upload [label]=\"'Offer Letter'\" [buttonLabel]=\"'Choose File'\"></app-file-upload>\r\n    </div>\r\n</div>"
        },
        {
            "name": "DotComponent",
            "id": "component-DotComponent-a4a68f93a8a7fe03cf37eeb622cdbeadd5ddb3eeccae7af1ca6f3ca93a07a26a584150df49f7414c561da745ff153f0e01df023fee0a9e3b434005971b9a9c0d",
            "file": "src/app/common-ui/feature-components/dot/dot.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dot",
            "styleUrls": [
                "./dot.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dot.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "dotColor",
                    "defaultValue": "'red'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelColor",
                    "defaultValue": "'lightgreen'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dot',\r\n  templateUrl: './dot.component.html',\r\n  styleUrls: ['./dot.component.css'],\r\n  standalone:true,\r\n  imports: [CommonModule]\r\n})\r\nexport class DotComponent {\r\n  @Input() label = 'Text';\r\n  @Input() labelColor: string = 'lightgreen';\r\n  @Input() labelPosition: 'left' | 'right' = 'left';\r\n  @Input() dotColor: string = 'red';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".text {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  display: inline-block;\r\n}\r\n\r\n.dot {\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n}",
                    "styleUrl": "./dot.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div>\r\n  <ng-container *ngIf=\"label; else onlyDot\">\r\n    <ng-container *ngIf=\"labelPosition === 'left'; else rightposition\">\r\n      <span class=\"text\" [style.color]=\"labelColor\">{{ label }}</span>\r\n      <span class=\"dot\" [style.backgroundColor]=\"dotColor\"></span>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-template #rightposition>\r\n    <span class=\"dot\" [style.backgroundColor]=\"dotColor\"></span>\r\n    <span class=\"text\" [style.color]=\"labelColor\">{{ label }}</span>\r\n  </ng-template>\r\n\r\n  <ng-template #onlyDot>\r\n    <span class=\"dot\" [style.backgroundColor]=\"dotColor\"></span>\r\n  </ng-template>\r\n</div>\r\n"
        },
        {
            "name": "DropDownComponent",
            "id": "component-DropDownComponent-cfff5dab587dfb79d187a652d92634b5c7f6db58a6ee576e157b2b29057daffea2fba0eabf9ee9fcbc4ae5c9bb9e18d99f361461521f57c3b0d91b21d2fb29ff",
            "file": "src/app/common-ui/controls/drop-down/drop-down.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-drop-down",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./drop-down.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isRequired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Gender'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "DropDown[]",
                    "decorators": []
                },
                {
                    "name": "placeHolder",
                    "defaultValue": "'Select Gender'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectedValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "selectOption",
                    "args": [
                        {
                            "name": "option",
                            "type": "DropDown",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "DropDown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\n\r\nexport interface DropDown {\r\n  name: string;\r\n  value: any;\r\n}\r\n@Component({\r\n  selector: 'app-drop-down',\r\n  templateUrl: './drop-down.component.html',\r\n  styleUrl: './drop-down.component.css',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class DropDownComponent {\r\n  @Input() label: string = 'Gender';\r\n  @Input() placeHolder: string = 'Select Gender';\r\n  @Input() isRequired: boolean = false;\r\n  @Output() selectedChange = new EventEmitter<any>();\r\n  @Input() options: DropDown[] = [];\r\n\r\n  selectedValue: any;\r\n  selectOption(option: DropDown) {\r\n    this.selectedValue = option.name;\r\n    this.selectedChange.emit(option.value);\r\n  }\r\n}\r\n",
            "styleUrl": "./drop-down.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"dropdown-wrapper\">\r\n  <label class=\"label-name\">{{label}} <span *ngIf=\"isRequired\" class=\"required\">*</span></label>\r\n\r\n  <div class=\"custom-dropdown\">\r\n    <input type=\"checkbox\"  [id]=\"label + '_toggle'\" class=\"dropdown-toggle\" hidden>\r\n    <label  [for] =\"label + '_toggle'\" class=\"custom-dropdown-selected\">{{selectedValue || placeHolder}}</label>\r\n    <ul class=\"custom-dropdown-list\">\r\n      <li *ngFor=\"let option of options\" (click)=\"selectOption(option)\"\r\n        [class.selected]=\"selectedValue === option.value\">\r\n       <label [for]=\"label + '_toggle'\">{{ option.name }}</label>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>"
        },
        {
            "name": "FileUploadComponent",
            "id": "component-FileUploadComponent-2539e99908843245d25a750fb558f7b4b75a43d9c9c3b5995a087e1846acb00487497ddcda0792e05b43a53e8080a3095aa9a7f446df368c58d69a6a511b0895",
            "file": "src/app/common-ui/controls/file-upload/file-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-file-upload",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./file-upload.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "buttonLabel",
                    "defaultValue": "'Choose file'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isRequired",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Government ID'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fileInputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fileInput', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        171
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onAreaClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFileSelected",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, ViewChild, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-file-upload',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrl: './file-upload.component.css'\r\n})\r\nexport class FileUploadComponent {\r\n  @Input() label: string = 'Government ID';\r\n  @Input() isRequired: boolean = true;\r\n\r\n  @Input() buttonLabel: string = 'Choose file';\r\n\r\n  @ViewChild('fileInput', { static: false }) fileInputRef!: ElementRef<HTMLInputElement>;\r\n\r\n  onAreaClick(event: MouseEvent) {\r\n    // event.preventDefault();\r\n      this.fileInputRef.nativeElement.click();\r\n  }\r\n\r\n  onFileSelected(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    const file = input.files?.[0];\r\n    if (file) {\r\n      console.log('Selected file:', file.name);\r\n      const statusElement = input.closest('.file-upload-field')?.querySelector('.file-status');\r\n      if (statusElement) statusElement.textContent = file.name;\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./file-upload.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"parent\">\r\n  <div class=\"single-upload\">\r\n    <!-- Wrap label and * inside a wrapper -->\r\n    <div class=\"upload-label-wrapper\">\r\n      <label class=\"upload-label\" for=\"fileInput\">{{ label }}</label>\r\n      <ng-container *ngIf=\"isRequired\">\r\n        <span class=\"required-star\">*</span>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <div class=\"file-upload-field\" (click)=\"onAreaClick($event)\">\r\n      <div class=\"icon\" aria-hidden=\"true\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\r\n          viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"\r\n          stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n          class=\"lucide lucide-upload h-4 w-4 text-gray-400\" aria-hidden=\"true\">\r\n          <path d=\"M12 3v12\"></path>\r\n          <path d=\"m17 8-5-5-5 5\"></path>\r\n          <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\r\n        </svg>\r\n      </div>\r\n\r\n      <label class=\"choose-btn choose-btn-inline\" (click)=\"$event.stopPropagation()\">\r\n        <input #fileInput id=\"fileInput\" type=\"file\" (change)=\"onFileSelected($event)\" />\r\n        <span>{{ buttonLabel }}</span>\r\n      </label>\r\n\r\n      <span class=\"file-status\">No file chosen</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "JobDetailsComponent",
            "id": "component-JobDetailsComponent-4053a9511182e531479479ebb225220fc076937c834b4d64d1a570f80766301a000c9f84a3440985f4f0479543e19e457c30f7903594f7f32df65cbbbc3d2162",
            "file": "src/app/modules/add-employee/job-details/job-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-job-details",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./job-details.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "casualLeaveOptions",
                    "defaultValue": "[\r\n  { name: '0', value: 0 },\r\n  { name: '1', value: 1 },\r\n  { name: '2', value: 2 },\r\n  { name: '3', value: 3 },\r\n  { name: '4', value: 4 },\r\n  { name: '5', value: 5 },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "departmentOptions",
                    "defaultValue": "[\r\n    { name: 'HR', value: 1 },\r\n    { name: 'IT', value: 2 },\r\n    { name: 'Finance', value: 3 },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "designationOptions",
                    "defaultValue": "[\r\n  { name: 'Software Engineer', value: 'software_engineer' },\r\n        { name: 'Senior Software Engineer', value: 'senior_software_engineer' },\r\n        { name: 'Team Lead', value: 'team_lead' },\r\n        { name: 'Project Manager', value: 'project_manager' },\r\n        { name: 'HR Manager', value: 'hr_manager' },\r\n        { name: 'Recruiter', value: 'recruiter' },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "earnedLeaveOptions",
                    "defaultValue": "[\r\n  { name: '0', value: 0 },\r\n  { name: '5', value: 5 },\r\n  { name: '10', value: 10 },\r\n  { name: '15', value: 15 },\r\n  { name: '20', value: 20 },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "festivalLeaveOptions",
                    "defaultValue": "[\r\n  { name: '0', value: 0 },\r\n  { name: '1', value: 1 },\r\n  { name: '2', value: 2 },\r\n  { name: '3', value: 3 },\r\n  { name: '4', value: 4 },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "optionalLeaveOptions",
                    "defaultValue": "[\r\n  { name: '0', value: 0 },\r\n  { name: '1', value: 1 },\r\n  { name: '2', value: 2 },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "payLevelOptions",
                    "defaultValue": "[\r\n  { name: 'Grade A', value: 'A' },\r\n  { name: 'Grade B', value: 'B' },\r\n  { name: 'Grade C', value: 'C' },\r\n  { name: 'Grade D', value: 'D' },\r\n  { name: 'Grade E', value: 'E' },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "reportingManagerOptions",
                    "defaultValue": "[\r\n  { name: 'John  (Project Manager)', value: 101 },\r\n  { name: 'Smith (Team Lead)', value: 102 },\r\n  { name: 'Michael Johnson (Senior Manager)', value: 103 },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "shiftTimingOptions",
                    "defaultValue": "[\r\n  { name: 'Morning Shift (9:00 AM - 6:00 PM)', value: '9-6' },\r\n  { name: 'Afternoon Shift (12:00 PM - 9:00 PM)', value: '12-9' },\r\n  { name: 'Evening Shift (2:00 PM - 11:00 PM)', value: '2-11' },\r\n  { name: 'Night Shift (10:00 PM - 6:00 AM)', value: '10-6' },\r\n  { name: 'General Shift (10:00 AM - 7:00 PM)', value: '10-7' },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "workLocationOptions",
                    "defaultValue": "[\r\n  { name: 'Hyderabad', value: 'HYD' },\r\n  { name: 'Bangalore', value: 'BLR' },\r\n  { name: 'Chennai', value: 'CHN' },\r\n  { name: 'Pune', value: 'PUN' },\r\n  { name: 'Mumbai', value: 'MUM' },\r\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "onCasualLeaveChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDepartmentChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDesignationChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEarnedLeaveChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFestivalLeaveChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOptionalLeaveChange",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onShiftTimingChange",
                    "args": [
                        {
                            "name": "selectedValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onWorkLocationChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TextBoxComponent",
                    "type": "component"
                },
                {
                    "name": "DropDownComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { DropDownComponent } from '../../../common-ui/controls/drop-down/drop-down.component';\r\nimport { TextBoxComponent } from '../../../common-ui/controls/text-box/text-box.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-job-details',\r\n  standalone: true,\r\n  imports: [CommonModule,TextBoxComponent,DropDownComponent],  \r\n  templateUrl: './job-details.component.html',\r\n  styleUrl: './job-details.component.css'\r\n})\r\nexport class JobDetailsComponent {\r\n    departmentOptions = [\r\n    { name: 'HR', value: 1 },\r\n    { name: 'IT', value: 2 },\r\n    { name: 'Finance', value: 3 },\r\n  ];\r\n\r\ndesignationOptions=[\r\n  { name: 'Software Engineer', value: 'software_engineer' },\r\n        { name: 'Senior Software Engineer', value: 'senior_software_engineer' },\r\n        { name: 'Team Lead', value: 'team_lead' },\r\n        { name: 'Project Manager', value: 'project_manager' },\r\n        { name: 'HR Manager', value: 'hr_manager' },\r\n        { name: 'Recruiter', value: 'recruiter' },\r\n];\r\n\r\npayLevelOptions = [\r\n  { name: 'Grade A', value: 'A' },\r\n  { name: 'Grade B', value: 'B' },\r\n  { name: 'Grade C', value: 'C' },\r\n  { name: 'Grade D', value: 'D' },\r\n  { name: 'Grade E', value: 'E' },\r\n];\r\n\r\nreportingManagerOptions = [\r\n  { name: 'John  (Project Manager)', value: 101 },\r\n  { name: 'Smith (Team Lead)', value: 102 },\r\n  { name: 'Michael Johnson (Senior Manager)', value: 103 },\r\n];\r\n\r\nworkLocationOptions = [\r\n  { name: 'Hyderabad', value: 'HYD' },\r\n  { name: 'Bangalore', value: 'BLR' },\r\n  { name: 'Chennai', value: 'CHN' },\r\n  { name: 'Pune', value: 'PUN' },\r\n  { name: 'Mumbai', value: 'MUM' },\r\n];\r\n\r\nshiftTimingOptions = [\r\n  { name: 'Morning Shift (9:00 AM - 6:00 PM)', value: '9-6' },\r\n  { name: 'Afternoon Shift (12:00 PM - 9:00 PM)', value: '12-9' },\r\n  { name: 'Evening Shift (2:00 PM - 11:00 PM)', value: '2-11' },\r\n  { name: 'Night Shift (10:00 PM - 6:00 AM)', value: '10-6' },\r\n  { name: 'General Shift (10:00 AM - 7:00 PM)', value: '10-7' },\r\n];\r\ncasualLeaveOptions = [\r\n  { name: '0', value: 0 },\r\n  { name: '1', value: 1 },\r\n  { name: '2', value: 2 },\r\n  { name: '3', value: 3 },\r\n  { name: '4', value: 4 },\r\n  { name: '5', value: 5 },\r\n];\r\n\r\n\r\n\r\nfestivalLeaveOptions = [\r\n  { name: '0', value: 0 },\r\n  { name: '1', value: 1 },\r\n  { name: '2', value: 2 },\r\n  { name: '3', value: 3 },\r\n  { name: '4', value: 4 },\r\n];\r\n\r\n\r\n\r\nearnedLeaveOptions = [\r\n  { name: '0', value: 0 },\r\n  { name: '5', value: 5 },\r\n  { name: '10', value: 10 },\r\n  { name: '15', value: 15 },\r\n  { name: '20', value: 20 },\r\n];\r\n\r\n\r\noptionalLeaveOptions = [\r\n  { name: '0', value: 0 },\r\n  { name: '1', value: 1 },\r\n  { name: '2', value: 2 },\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nonDepartmentChange(value: any) {\r\n    console.log('Selected Value:', value);\r\n  }\r\n  onDesignationChange(value:any){\r\n     console.log('Selected Value:', value);\r\n  }\r\n  onWorkLocationChange(value: any) {\r\n  console.log('Selected Work Location:', value);\r\n}\r\nonShiftTimingChange(selectedValue: any) {\r\n  console.log('Selected Shift Timing:', selectedValue);\r\n}\r\nonCasualLeaveChange(val: any) {\r\n  console.log('Casual Leave:', val); \r\n\r\n}\r\nonFestivalLeaveChange(val: any) { \r\nconsole.log('Festival Leave:', val);\r\n }\r\n\r\n onEarnedLeaveChange(val: any) { \r\n  console.log('Earned Leave:', val); \r\n}\r\n\r\nonOptionalLeaveChange(val: any) { \r\n  console.log('Optional Leave:', val);\r\n }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n",
            "styleUrl": "./job-details.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"blank-space\">\r\n    <div class=\"inside\">\r\n        <div class=\"icon\" aria-hidden=\"true\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-briefcase h-5 w-5 text-purple-600\" aria-hidden=\"true\"><path d=\"M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"></path><rect width=\"20\" height=\"14\" x=\"2\" y=\"6\" rx=\"2\"></rect></svg>\r\n        </div>\r\n        <p>Job Details</p>\r\n    </div>\r\n    <div class=\"grid-container\">\r\n    \r\n            <div>\r\n<app-text-box\r\n  label=\"Office Email\"\r\n  placeholder=\"Enter office email\"\r\n  [isRequired]=\"true\"\r\n  type=\"email\"\r\n></app-text-box>\r\n\r\n\r\n  <app-drop-down\r\n    label=\"Department\"\r\n    placeHolder=\"Select department\"\r\n    [isRequired]=\"true\"\r\n    [options]=\"departmentOptions\"\r\n    (selectedChange)=\"onDepartmentChange($event)\"\r\n  ></app-drop-down>\r\n\r\n  <app-text-box\r\n  label=\"Designation\"\r\n  placeholder=\"Enter your job title\"\r\n  [isRequired]=\"true\"\r\n></app-text-box>\r\n\r\n\r\n  <app-drop-down\r\n    label=\"Employee Type\"\r\n    placeHolder=\"Select designation\"\r\n    [options]=\"designationOptions\"\r\n    (selectedChange)=\"onDesignationChange($event)\"\r\n  ></app-drop-down>\r\n\r\n  <app-drop-down\r\n  label=\"Pay Level / Grade\"\r\n  placeHolder=\"Select pay level\"\r\n  [isRequired]=\"true\"\r\n  [options]=\"payLevelOptions\"\r\n  (selectedChange)=\"onPayLevelChange($event)\"\r\n></app-drop-down>\r\n\r\n\r\n<app-drop-down\r\n  label=\"Reporting Manager\"\r\n  placeHolder=\"Select manager\"\r\n  [options]=\"reportingManagerOptions\"\r\n  [isRequired]=\"true\"\r\n  (selectedChange)=\"onReportingManagerChange($event)\"\r\n></app-drop-down>\r\n\r\n</div>\r\n<div>\r\n<app-drop-down\r\n  label=\"Work Location\"\r\n  placeHolder=\"Select work location\"\r\n  [options]=\"workLocationOptions\"\r\n  [isRequired]=\"true\"\r\n  (selectedChange)=\"onWorkLocationChange($event)\"\r\n></app-drop-down>\r\n\r\n<app-drop-down\r\n  label=\"Shift Timings\"\r\n  placeHolder=\"Select shift\"\r\n  [options]=\"shiftTimingOptions\"\r\n  [isRequired]=\"true\"\r\n  (selectedChange)=\"onShiftTimingChange($event)\"\r\n></app-drop-down>\r\n\r\n\r\n<!-- <app-number-box> -->\r\n<app-drop-down\r\n  label=\"Casual Leaves\"\r\n  placeHolder=\"Select casual leaves\"\r\n  [options]=\"casualLeaveOptions\"\r\n  [isRequired]=\"true\"\r\n  (selectedChange)=\"onCasualLeaveChange($event)\"\r\n></app-drop-down>\r\n\r\n\r\n<app-drop-down\r\n  label=\"Festival Leaves\"\r\n  placeHolder=\"Select festival leaves\"\r\n  [options]=\"festivalLeaveOptions\"\r\n  [isRequired]=\"true\"\r\n  (selectedChange)=\"onFestivalLeaveChange($event)\"\r\n></app-drop-down>\r\n\r\n\r\n<app-drop-down\r\n  label=\"Earned Leaves\"\r\n  placeHolder=\"Select earned leaves\"\r\n  [options]=\"earnedLeaveOptions\"\r\n  [isRequired]=\"true\"\r\n  (selectedChange)=\"onEarnedLeaveChange($event)\"\r\n></app-drop-down>\r\n\r\n\r\n\r\n<app-drop-down\r\n  label=\"Optional Leaves\"\r\n  placeHolder=\"Select optional leaves\"\r\n  [options]=\"optionalLeaveOptions\"\r\n  [isRequired]=\"true\"\r\n  (selectedChange)=\"onOptionalLeaveChange($event)\"\r\n></app-drop-down>\r\n\r\n</div>\r\n\r\n<!-- \r\n</app-number-box> -->\r\n\r\n\r\n</div>\r\n   \r\n</div>"
        },
        {
            "name": "NoticeBannerComponent",
            "id": "component-NoticeBannerComponent-cb4c2c5bd36fcfb506c5cef7ae7d701a9c91393233610665e9d2df68506383e61a53a88afe894397f4a7d7e28d2708c7a1d0fdda8ec82cd4934f460e04933feb",
            "file": "src/app/common-ui/feature-components/notice-banner/notice-banner.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notice-banner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notice-banner.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "bannerColor",
                    "defaultValue": "'#DBEAFE'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "content",
                    "defaultValue": "'Changes to leave policies will apply to all employees from the next calendar year. Current year balances will remain unchanged.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "contentColor",
                    "defaultValue": "'#374151'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "contentInNextLine",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "heading",
                    "defaultValue": "'Important: '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "headingColor",
                    "defaultValue": "'#1E3A8A'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "highlighterColor",
                    "defaultValue": "'#1E3A8A'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconColor",
                    "defaultValue": "'#1E3A8A'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBorder",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notice-banner',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './notice-banner.html',\r\n  styleUrl: './notice-banner.css'\r\n})\r\nexport class NoticeBannerComponent {\r\n  @Input() heading: string = 'Important: ';\r\n  @Input() content: string =\r\n    'Changes to leave policies will apply to all employees from the next calendar year. Current year balances will remain unchanged.';\r\n  @Input() headingColor: string = '#1E3A8A'; \r\n  @Input() contentColor: string = '#374151';\r\n  @Input() contentInNextLine: boolean = false;\r\n  @Input() bannerColor: string = '#DBEAFE'; \r\n  @Input() highlighterColor: string = '#1E3A8A'; \r\n  @Input() showIcon: boolean = true;\r\n  @Input() iconColor: string = '#1E3A8A';\r\n  @Input() showBorder: boolean = false;\r\n\r\n}\r\n",
            "styleUrl": "./notice-banner.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\r\n  class=\"notice-banner flex items-start p-4 rounded-md\"\r\n  [class.hide-icon]=\"!showIcon\"\r\n  [class.with-border]=\"showBorder\"\r\n  [style.--banner-color]=\"bannerColor\"\r\n  [style.--border-color]=\"highlighterColor\"\r\n  [style.--heading-color]=\"headingColor\"\r\n  [style.--content-color]=\"contentColor\"\r\n  [style.--icon-color]=\"iconColor\"\r\n>\r\n<svg\r\n    *ngIf=\"showIcon\"\r\n    class=\"w-6 h-6 mt-0.5 flex-shrink-0\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"var(--icon-color)\" stroke-width=\"2\" fill=\"none\" />\r\n    <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\" stroke=\"var(--icon-color)\" stroke-width=\"2\" />\r\n    <circle cx=\"12\" cy=\"9\" r=\"1\" fill=\"var(--icon-color)\" />\r\n  </svg>\r\n\r\n  <!-- Text -->\r\n  <div class=\"ml-3\">\r\n    <span class=\"font-semibold heading\">{{ heading }}</span>\r\n\r\n    <ng-container *ngIf=\"!contentInNextLine\">\r\n      <span class=\"content\">{{ content }}</span>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"contentInNextLine\">\r\n      <div class=\"mt-1\">\r\n        <span class=\"content\">{{ content }}</span>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NumberBoxComponent",
            "id": "component-NumberBoxComponent-de85708429cbb4de0de0f9f5c37d18cded5656010275974b5d2b50ad72ca846f59dc480cda69b5450b8639d94dc5fa2227a2d6f035e5a0d277bfa0db251069dc",
            "file": "src/app/common-ui/controls/number-box/number-box.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-number-box",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./number-box.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isRequired",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Casual'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component,Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-number-box',\r\n  templateUrl: './number-box.component.html',\r\n  styleUrl: './number-box.component.css',\r\n  imports: [CommonModule],\r\n  standalone: true\r\n})\r\nexport class NumberBoxComponent {\r\n @Input() label: string = 'Casual';\r\n @Input() isRequired: boolean = true;\r\n}\r\n",
            "styleUrl": "./number-box.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"form-group\">\r\n    <label for=\"Casual\">{{label}} <span *ngIf=\"isRequired\"> * </span></label>\r\n    <input type=\"number\" id=\"numbers\" placeholder=\" \" min=\"0\" value=\"0\" required>\r\n</div>\r\n"
        },
        {
            "name": "PasswordComponent",
            "id": "component-PasswordComponent-29420ff978736cc1246ab8a472b90d6203ea37dcd8c50a30f2f0d0e65cb39fd889a651725fecceb1165dc8a9b154a1bca9bcd81a81d05d7b3d247d9e11b271b4",
            "file": "src/app/common-ui/controls/password/password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isRequired",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Temporary Password'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Enter Temporary password'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "passwordVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "togglePassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-password',\r\n  templateUrl: './password.component.html',\r\n  styleUrl: './password.component.css'\r\n})\r\nexport class PasswordComponent {\r\n  @Input() label: string = 'Temporary Password';\r\n  @Input() isRequired: boolean = true;\r\n  @Input() placeholder: string = 'Enter Temporary password'\r\n  passwordVisible: boolean = false;\r\n\r\n  togglePassword() {\r\n    this.passwordVisible = !this.passwordVisible;\r\n  }\r\n}\r\n",
            "styleUrl": "./password.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex flex-col gap-1 font-sans text-md text-gray-700 \">\r\n  <!-- Label -->\r\n  <div class=\"flex items-center gap-1 mb-1\">\r\n    <div class=\"font-medium text-[15px]\">{{label}}</div>\r\n     <ng-container *ngIf=\"isRequired\">\r\n        <span class=\"required-star text-red-500\">*</span>\r\n      </ng-container>\r\n  </div>\r\n\r\n  <!-- Input wrapper -->\r\n  <div class=\"relative rounded-md bg-[#f6faff] p-[1px] border border-[#B0D5FD]\r\n              focus-within:border-[#2563eb]\r\n              focus-within:shadow-[0_0_0_3px_rgba(146,176,244,1)] mb-10\">\r\n              \r\n    <div class=\"flex items-center justify-between bg-white rounded-md px-3 py-1.5\">\r\n      \r\n      <!-- Password input -->\r\n      <input \r\n        [type]=\"passwordVisible ? 'text' : 'password'\" \r\n        [placeholder]=\"placeholder\"\r\n        class=\"flex-1 bg-transparent outline-none text-gray-700 placeholder-gray-400 text-[14px]\"\r\n      />\r\n\r\n      <!-- Eye icon toggle -->\r\n      <button type=\"button\" class=\"ml-2 text-gray-400\" (click)=\"togglePassword()\">\r\n        <!-- Eye open -->\r\n        <svg *ngIf=\"!passwordVisible\" xmlns=\"http://www.w3.org/2000/svg\"\r\n             class=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                d=\"M2.458 12C3.732 7.943 7.523 5 12 5\r\n                   c4.478 0 8.268 2.943 9.542 7\r\n                   -1.274 4.057-5.064 7-9.542 7\r\n                   -4.477 0-8.268-2.943-9.542-7z\" />\r\n        </svg>\r\n\r\n        <!-- Eye slash -->\r\n        <svg *ngIf=\"passwordVisible\" xmlns=\"http://www.w3.org/2000/svg\"\r\n             class=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n                d=\"M13.875 18.825A10.05 10.05 0 0112 19\r\n                   c-4.478 0-8.268-2.943-9.542-7\r\n                   a9.956 9.956 0 012.223-3.425\r\n                   M6.168 6.168A9.956 9.956 0 0112 5\r\n                   c4.477 0 8.268 2.943 9.542 7\r\n                   a10.05 10.05 0 01-1.18 2.524M3 3l18 18\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ProgressBarComponent",
            "id": "component-ProgressBarComponent-1bf548bfcf3ffd95a4265d08dd5a052a01f775fde2fbf92b17b7db8802c626c6cc92e7bd820014723b358c16f381101f8ff8616f2c55658edac6a4d66b74d021",
            "file": "src/app/common-ui/controls/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar",
            "styleUrls": [
                "./progress-bar.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "barColor",
                    "defaultValue": "'blueviolet'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "leaveType",
                    "defaultValue": "'Sick Leave'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "remainingTextColor",
                    "defaultValue": "'#4f46e5'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBorderRadius",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "total",
                    "defaultValue": "12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "totalTextColor",
                    "defaultValue": "'#374151'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "used",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "usedTextColor",
                    "defaultValue": "'#6b7280'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "progressPercentage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "remainingDays",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateProgress",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.css']\r\n})\r\nexport class ProgressBarComponent implements OnChanges {\r\n  @Input() leaveType: string = 'Sick Leave';\r\n  @Input() total: number = 12;\r\n  @Input() used: number = 3;\r\n\r\n  @Input() barColor: string = 'blueviolet';\r\n  @Input() showBorderRadius: boolean = true;\r\n\r\n  @Input() totalTextColor: string = '#374151';      \r\n  @Input() usedTextColor: string = '#6b7280';      \r\n  @Input() remainingTextColor: string = '#4f46e5';  \r\n\r\n\r\n  remainingDays: number = 0;\r\n  progressPercentage: number = 0;\r\n\r\n\r\n   ngOnInit(): void {\r\n    this.calculateProgress();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['total'] || changes['used']) {\r\n      this.calculateProgress();\r\n    }\r\n  }\r\n\r\n  private calculateProgress(): void {\r\n    const safeTotal = this.total > 0 ? this.total : 0;\r\n    const safeUsed = Math.min(this.used, safeTotal);\r\n\r\n    this.remainingDays = safeTotal - safeUsed;\r\n    this.progressPercentage = safeTotal > 0 ? (safeUsed / safeTotal) * 100 : 0;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".progress-card {\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  padding: 1rem 1.25rem;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n  font-family: 'Inter', sans-serif;\r\n  width: 100%;\r\n}\r\n\r\n.progress-header {\r\n  margin-bottom: 13px;\r\n}\r\n\r\n.leave-type {\r\n  font-weight: 600;\r\n  color: #374151;\r\n  font-size: 1rem;\r\n}\r\n\r\n.progress-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n  margin-bottom: -6px;\r\n}\r\n\r\n.progress-bar {\r\n  background: #e5e7eb;\r\n  height: 8px;\r\n  margin-top: 0.75rem;\r\n  width: 100%;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: blueviolet;\r\n  transition: width 0.3s ease, background 0.3s ease;\r\n}\r\n\r\n.remaining-text {\r\n  font-size: 0.875rem;\r\n  margin-top: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n",
                    "styleUrl": "./progress-bar.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"parent\">\r\n  <div class=\"progress-card\">\r\n    <div class=\"progress-header\">\r\n      <span class=\"leave-type\">{{ leaveType }}</span>\r\n    </div>\r\n\r\n    <div class=\"progress-info\">\r\n      <span class=\"used-text\" [style.color]=\"usedTextColor\">\r\n        Used: {{ used }}\r\n      </span>\r\n      <span class=\"total-text\" [style.color]=\"totalTextColor\">\r\n        Total: {{ total }}\r\n      </span>\r\n    </div>\r\n\r\n    <div\r\n      class=\"progress-bar\"\r\n      [ngStyle]=\"{\r\n        borderRadius: showBorderRadius ? '8px' : '0px'\r\n      }\"\r\n    >\r\n      <div\r\n        class=\"progress-fill\"\r\n        [ngStyle]=\"{\r\n          width: progressPercentage + '%',\r\n          background: barColor,\r\n          borderRadius: showBorderRadius ? '8px' : '0px'\r\n        }\"\r\n      ></div>\r\n    </div>\r\n\r\n    <div class=\"remaining-text\" [style.color]=\"remainingTextColor\">\r\n      <!-- {{ total - used }} days remaining -->\r\n      {{ remainingDays }} days remaining\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TextAreaComponent",
            "id": "component-TextAreaComponent-16a0ad98f50032d34a60112af5d915ef599d9ae89cb8b99bd4904239c78d73f3b71fdeb0b5c67e2213d942cfdd5eeac618b3de03b6408b55d7bce365e90f078b",
            "file": "src/app/common-ui/controls/text-area/text-area.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-area",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text-area.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isRequired",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Address'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "Placeholder",
                    "defaultValue": "'Enter your address'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-text-area',\r\n  standalone: true,\r\n  templateUrl: './text-area.component.html',\r\n  styleUrl: './text-area.component.css',\r\n  imports: [CommonModule]\r\n})\r\nexport class TextAreaComponent {\r\n  @Input() label: string = 'Address';\r\n  @Input() Placeholder: string = 'Enter your address';\r\n  @Input() isRequired: boolean = true;\r\n}\r\n",
            "styleUrl": "./text-area.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"form-group\">\r\n  <label for=\"address\">{{label}} <span *ngIf=\"isRequired\" class=\"required-star\">*</span></label>\r\n  <textarea id=\"address\" name=\"address\" [placeholder]=\"Placeholder\" ></textarea>\r\n</div>\r\n"
        },
        {
            "name": "TextBoxComponent",
            "id": "component-TextBoxComponent-2ea2386ec1c86fdc6e4ad7d6b091430e2f9be615ed5f4f4b9ce3a7650adb603efdc7f2e7052c387aaef76952319caf489448f8fcd1a73b21801fe225bdbd5b39",
            "file": "src/app/common-ui/controls/text-box/text-box.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text-box",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./text-box.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isRequired",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Full Name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeHolder",
                    "defaultValue": "'Enter full name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showBorder",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n@Component({\r\n  selector: 'app-text-box',\r\n  standalone: true,\r\n  templateUrl: './text-box.component.html',\r\n  styleUrl: './text-box.component.css',\r\n  imports: [CommonModule]\r\n})\r\nexport class TextBoxComponent {\r\n  @Input() label: string = 'Full Name';\r\n  @Input() placeHolder: string = 'Enter full name';\r\n  @Input() isRequired: boolean = true;\r\n  @Input() showBorder: boolean = true;\r\n\r\n}\r\n",
            "styleUrl": "./text-box.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"form-group\">\r\n  <label>\r\n    {{ label }} <span *ngIf=\"isRequired\">*</span>\r\n  </label>\r\n  <input type=\"text\" id=\"fullname\" name=\"fullname\" [placeholder]=\"placeHolder\"\r\n    [ngClass]=\"{ 'with-border': showBorder, 'no-border': !showBorder }\" />\r\n</div>"
        },
        {
            "name": "ToggleComponent",
            "id": "component-ToggleComponent-b1dde53cba382f1a88ded04a03490aa57b8f4d60f0964b2957e8102f716864c51b23e941713747d0a519c2dd5f648f6da9deb5b3f081d4f62e88024a80e22be5",
            "file": "src/app/common-ui/controls/toggle/toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toggle",
            "styleUrls": [
                "./toggle.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'#4CAF50'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelColor",
                    "defaultValue": "'#333'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "toggleChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onToggle",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-toggle',\r\n  standalone: true,\r\n  imports: [CommonModule],               \r\n  templateUrl: './toggle.component.html',\r\n  styleUrls: ['./toggle.component.css'] \r\n})\r\nexport class ToggleComponent {\r\n  @Input() checked = false;\r\n  @Input() color = '#4CAF50';            \r\n  @Output() checkedChange = new EventEmitter<boolean>(); \r\n  @Output() toggleChange = new EventEmitter<boolean>();\r\n  @Input() label: string = '';\r\n  @Input() labelPosition: 'left' | 'right' = 'right';\r\n  @Input() labelColor: string = '#333';   \r\n\r\n  \r\n\r\n  onToggle(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    this.checked = input.checked;                \r\n    this.checkedChange.emit(this.checked);      \r\n    this.toggleChange.emit(this.checked);       \r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".toggle-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.switch-wrapper {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  order: 1; \r\n}\r\n\r\n\r\n.upload-label {\r\n  font-size: 14px;\r\n  color: #333;\r\n  cursor: pointer;\r\n  order: 2; \r\n}\r\n\r\n.upload-label {\r\n  font-size: 14px;\r\n  color: var(--label-color, #333); \r\n  cursor: pointer;\r\n  order: 2;\r\n}\r\n\r\n\r\n.toggle-container.label-left .upload-label {\r\n  order: 1;\r\n}\r\n.toggle-container.label-left .switch-wrapper {\r\n  order: 2; \r\n}\r\n\r\n\r\n.toggle-input {\r\n  display: none;\r\n}\r\n\r\n.toggle-label {\r\n  width: 60px;\r\n  height: 30px;\r\n  background-color: #ccc;\r\n  border-radius: 30px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease, transform 0.2s ease;\r\n}\r\n\r\n\r\n.toggle-label.on {\r\n  background-color: var(--toggle-color, #4caf50);\r\n}\r\n\r\n\r\n.toggle-label::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 6px;\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: white;\r\n  border-radius: 50%;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n\r\n.toggle-input:checked + .toggle-label::after {\r\n  transform: translateX(30px);\r\n}\r\n\r\n\r\n.toggle-label:hover::after {\r\n  transform: scale(1.2);\r\n}\r\n.toggle-input:checked + .toggle-label:hover::after {\r\n  transform: translateX(30px) scale(1.2);\r\n}\r\n",
                    "styleUrl": "./toggle.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div\r\n  class=\"toggle-container\"\r\n  [class.label-left]=\"labelPosition === 'left'\"\r\n  [style.--label-color]=\"labelColor\"   \r\n>\r\n  <label *ngIf=\"label\" class=\"upload-label\" for=\"toggle\">{{ label }}</label>\r\n\r\n  <div class=\"switch-wrapper\">\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"toggle\"\r\n      class=\"toggle-input\"\r\n      [checked]=\"checked\"\r\n      (change)=\"onToggle($event)\"\r\n    />\r\n    <label\r\n      for=\"toggle\"\r\n      class=\"toggle-label\"\r\n      [class.on]=\"checked\"\r\n      [style.--toggle-color]=\"color\"\r\n    ></label>\r\n  </div>\r\n</div>\r\n\r\n\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a76e273a7936e06a983d2b5445c625bd816671215f9780e37471664ccfea639ef6f34a4b42fb188524e1a4dfd493ae5c803e3124b071275dc6cc0d21f3219867",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n// import { PasswordBoxComponent } from './common-ui/controls/password-box/password-box.component';\r\nimport { JobDetailsComponent } from './modules/add-employee/job-details/job-details.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [AppComponent, JobDetailsComponent],\r\n    imports: [\r\n    BrowserModule, HttpClientModule,\r\n    AppRoutingModule\r\n        \r\n],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "JobDetailsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": [],
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "AppRoutingModule",
                "kind": "module",
                "filename": "src/app/app-routing.module.ts"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WeatherForecast",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/calendar/calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/chip/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/drop-down/drop-down.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropDownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/drop-down/drop-down.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropDown",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/file-upload/file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/number-box/number-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/password/password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/text-area/text-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/text-box/text-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/controls/toggle/toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/feature-components/count-widget/count-widget.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CountWidgetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/feature-components/dot/dot.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DotComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/common-ui/feature-components/notice-banner/notice-banner.ts",
                "type": "component",
                "linktype": "component",
                "name": "NoticeBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/add-employee/basic-info/basic-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BasicInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/add-employee/documents-upload/documents-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentsUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/add-employee/job-details/job-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "JobDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            }
        ]
    }
}